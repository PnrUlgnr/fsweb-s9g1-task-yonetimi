{"ast":null,"code":"var _jsxFileName = \"/Users/pinarulgener/workintech/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(props) {\n  _s();\n  var _errors$title, _errors$description, _errors$people;\n  const {\n    kisiler,\n    submitFn\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    defaultValues: {\n      id: nanoid(5),\n      title: \"\",\n      description: \"\",\n      people: []\n    },\n    mode: \"onChange\"\n  });\n  const onSubmit = (data, e) => {\n    submitFn({\n      ...data,\n      status: \"Yapılacak\"\n    });\n    e.target.reset();\n  };\n  const validateTitle = value => {\n    return value.trim().length >= 3 || \"Görev başlığı en az 3 karakter olmalı \";\n  };\n  const validateDiscription = value => {\n    return value.trim().length >= 10 || \"Görev başlığı en az 10 karakter olmalı \";\n  };\n  const validatePeople = value => {\n    return value.length >= 1 && value.length <= 3 || \"Lütfen en az 1 en çok 3 kişi seçiniz \";\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        ...register(\"title\", {\n          validate: validateTitle\n        }),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        ...register(\"description\", {\n          validate: validateDiscription\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: p,\n            ...register(\"people\", {\n              validate: validatePeople\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"jP7o36e/8ZVWG3QbLOXdl03G5RY=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","TaskHookForm","props","kisiler","submitFn","register","handleSubmit","formState","errors","isValid","defaultValues","id","title","description","people","mode","onSubmit","data","e","status","target","reset","validateTitle","value","trim","length","validateDiscription","validatePeople","validate","message","map","p"],"sources":["/Users/pinarulgener/workintech/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\n\nexport default function TaskHookForm(props) {\n  const { kisiler, submitFn } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm({\n    defaultValues: {\n      id: nanoid(5),\n      title: \"\",\n      description: \"\",\n      people: [],\n    },\n    mode: \"onChange\",\n  });\n\n  const onSubmit = (data, e) => {\n    submitFn({ ...data, status: \"Yapılacak\" });\n    e.target.reset();\n  };\n  const validateTitle = (value) => {\n    return value.trim().length >= 3 || \"Görev başlığı en az 3 karakter olmalı \";\n  };\n  const validateDiscription = (value) => {\n    return (\n      value.trim().length >= 10 || \"Görev başlığı en az 10 karakter olmalı \"\n    );\n  };\n  const validatePeople = (value) => {\n    return (\n      (value.length >= 1 && value.length <= 3) ||\n      \"Lütfen en az 1 en çok 3 kişi seçiniz \"\n    );\n  };\n\n  return (\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"title\">\n          Başlık\n        </label>\n        <input\n          className=\"input-text\"\n          id=\"title\"\n          {...register(\"title\", { validate: validateTitle })}\n          type=\"text\"\n        />\n        <p className=\"input-error\">{errors.title?.message}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"description\">\n          Açıklama\n        </label>\n        <textarea\n          className=\"input-textarea\"\n          rows=\"3\"\n          id=\"description\"\n          {...register(\"description\", { validate: validateDiscription })}\n        ></textarea>\n        <p className=\"input-error\">{errors.description?.message}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\">İnsanlar</label>\n        <div>\n          {kisiler.map((p) => (\n            <label className=\"input-checkbox\" key={p}>\n              <input\n                type=\"checkbox\"\n                value={p}\n                {...register(\"people\", { validate: validatePeople })}\n              />\n              {p}\n            </label>\n          ))}\n        </div>\n        <p className=\"input-error\">{errors.people?.message}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <button className=\"submit-button\" type=\"submit\" disabled={!isValid}>\n          Kaydet\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,eAAe,SAASC,YAAY,CAACC,KAAK,EAAE;EAAA;EAAA;EAC1C,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGF,KAAK;EACnC,MAAM;IACJG,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAQ;EAC/B,CAAC,GAAGV,OAAO,CAAC;IACVW,aAAa,EAAE;MACbC,EAAE,EAAEX,MAAM,CAAC,CAAC,CAAC;MACbY,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,CAACC,IAAI,EAAEC,CAAC,KAAK;IAC5Bd,QAAQ,CAAC;MAAE,GAAGa,IAAI;MAAEE,MAAM,EAAE;IAAY,CAAC,CAAC;IAC1CD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE;EAClB,CAAC;EACD,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,OAAOA,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,IAAI,CAAC,IAAI,wCAAwC;EAC7E,CAAC;EACD,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrC,OACEA,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,IAAI,EAAE,IAAI,yCAAyC;EAE1E,CAAC;EACD,MAAME,cAAc,GAAIJ,KAAK,IAAK;IAChC,OACGA,KAAK,CAACE,MAAM,IAAI,CAAC,IAAIF,KAAK,CAACE,MAAM,IAAI,CAAC,IACvC,uCAAuC;EAE3C,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,UAAU;IAAC,QAAQ,EAAEnB,YAAY,CAACU,QAAQ,CAAE;IAAA,wBAC1D;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAC,OAAO,EAAC,OAAO;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACE,SAAS,EAAC,YAAY;QACtB,EAAE,EAAC,OAAO;QAAA,GACNX,QAAQ,CAAC,OAAO,EAAE;UAAEuB,QAAQ,EAAEN;QAAc,CAAC,CAAC;QAClD,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QACX,eACF;QAAG,SAAS,EAAC,aAAa;QAAA,2BAAEd,MAAM,CAACI,KAAK,kDAAZ,cAAciB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAC,OAAO,EAAC,aAAa;QAAA,UAAC;MAErD;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACE,SAAS,EAAC,gBAAgB;QAC1B,IAAI,EAAC,GAAG;QACR,EAAE,EAAC,aAAa;QAAA,GACZxB,QAAQ,CAAC,aAAa,EAAE;UAAEuB,QAAQ,EAAEF;QAAoB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACpD,eACZ;QAAG,SAAS,EAAC,aAAa;QAAA,iCAAElB,MAAM,CAACK,WAAW,wDAAlB,oBAAoBgB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC/C;QAAA,UACG1B,OAAO,CAAC2B,GAAG,CAAEC,CAAC,iBACb;UAAO,SAAS,EAAC,gBAAgB;UAAA,wBAC/B;YACE,IAAI,EAAC,UAAU;YACf,KAAK,EAAEA,CAAE;YAAA,GACL1B,QAAQ,CAAC,QAAQ,EAAE;cAAEuB,QAAQ,EAAED;YAAe,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACpD,EACDI,CAAC;QAAA,GANmCA,CAAC;UAAA;UAAA;UAAA;QAAA,QAQzC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAG,SAAS,EAAC,aAAa;QAAA,4BAAEvB,MAAM,CAACM,MAAM,mDAAb,eAAee;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAQ,SAAS,EAAC,eAAe;QAAC,IAAI,EAAC,QAAQ;QAAC,QAAQ,EAAE,CAACpB,OAAQ;QAAA,UAAC;MAEpE;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GAvFuBR,YAAY;EAAA,QAM9BF,OAAO;AAAA;AAAA,KANWE,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}